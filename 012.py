# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
# 1: 1
# 3: 1,3
# 6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
#
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?
from datetime import datetime

from utilities import triangle_numbers, calculate_divisors

triangle_numbers_generator = triangle_numbers()
time_started = datetime.now()

while True:
    triangle_number = next(triangle_numbers_generator)
    num_factors = len(calculate_divisors(triangle_number))
    if num_factors >= 500:
        time_finished = datetime.now()
        print(triangle_number)
        break

total_time = (time_finished - time_started).total_seconds()
print('Finished in {}s'.format(total_time))

